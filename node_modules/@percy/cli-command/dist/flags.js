"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _command = require("@oclif/command");

// Common logging flags exclusive of each other.
const logging = {
  verbose: _command.flags.boolean({
    char: 'v',
    description: 'log everything',
    exclusive: ['quiet', 'silent']
  }),
  quiet: _command.flags.boolean({
    char: 'q',
    description: 'log errors only',
    exclusive: ['verbose', 'silent']
  }),
  silent: _command.flags.boolean({
    description: 'log nothing',
    exclusive: ['verbose', 'quiet']
  })
}; // Common asset discovery flags mapped to config options.

const discovery = {
  'allowed-hostname': _command.flags.string({
    char: 'h',
    description: 'allowed hostnames',
    multiple: true,
    percyrc: 'discovery.allowedHostnames'
  }),
  'network-idle-timeout': _command.flags.integer({
    char: 't',
    description: 'asset discovery idle timeout',
    percyrc: 'discovery.networkIdleTimeout'
  }),
  'disable-cache': _command.flags.boolean({
    description: 'disable asset discovery caches',
    percyrc: 'discovery.disableCache'
  })
}; // Common flag for loading config files.

const config = {
  config: _command.flags.string({
    char: 'c',
    description: 'configuration file path'
  })
}; // Export a single object imported as `flags`

var _default = { ..._command.flags,
  logging,
  discovery,
  config
};
exports.default = _default;