"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Validate = void 0;

var _command = _interopRequireDefault(require("@oclif/command"));

var _config = _interopRequireDefault(require("@percy/config"));

var _logger = _interopRequireDefault(require("@percy/logger"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class Validate extends _command.default {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "log", (0, _logger.default)('cli:config:validate'));
  }

  async run() {
    let {
      args: {
        filepath: path
      }
    } = this.parse(); // when `bail` is true, #load() returns undefined on validation warnings

    let config = _config.default.load({
      path,
      bail: true,
      print: true
    });

    if (!config) this.exit(1);
  }

}

exports.Validate = Validate;

_defineProperty(Validate, "description", 'Validate a Percy config file');

_defineProperty(Validate, "args", [{
  name: 'filepath',
  description: 'config filepath, detected by default'
}]);

_defineProperty(Validate, "examples", ['$ percy config:validate', '$ percy config:validate ./config/percy.yml']);